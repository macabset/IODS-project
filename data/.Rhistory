colnames(gii)[7] <- "Edu2F"
colnames(gii)[8] <- "Edu2M"
colnames(gii)[9] <- "LabF"
colnames(gii)[10] <- "LabM"
colnames(gii)
#Mutate: gii
#2 new variables
gii <- mutate(gii, Sex_edu2 = Edu2F / Edu2M)
gii <- mutate(gii, Lab_ratio = LabF/LabM)
colnames(gii)
#Join datasets by country
join_by <- c("Country")
hdi_gii <- inner_join(hd, gii, by= join_by, suffix= c(".hd", ".gii"))
colnames(hdi_gii)
#Saving project to data file
write.csv(hdi_gii, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
#And final check that everything works.
str(human)
#This is continuum for last week's data wrangling. We are continuing with the same data.
#1. mutate data GNi to numeric
human <- mutate(human, GNI = as.numeric(human$GNI))
str(human)
#2. Keep columns: (described in the meta file above):  "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
keep_columns <- c("Country", "Sex_edu2", "Lab_ratio", "Edu_expect", "Life_expect", "GNI", "Mom_death", "Young_birth", "Present_parl")
human <- select(human, one_of(keep_columns))
str(human)
#3.Remove rows with missing values
#create column with missing values and then filter leaving NA's out.
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human <- filter(human, complete.cases(human))
complete.cases(human)
str(human)
#Let's clean the column country and filter regions out
#The last 7 rows with column country are infact regions instead of countries.
last <- nrow(human) - 7
last
# I'll choose everything until the last 7 observations, the 155's being Nigeria.
human <- human[1:155, ]
str(human)
#4. add countries as rownames and remove country as column
rownames(human) <- human$Country
#Remove country as column
human <- dplyr::select(human, -Country)
str(human)
head(human)
#Now we have wanted 155 observations and 8 variables, with countries as rownames.
#override the old data:
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
#It now has 9 variables, but that is because of the rownames included.
setwd("C:/Users/Petri/Documents/GitHub/IODS-project/data/")
human <- read.table("human.csv", sep = ",", header = TRUE)
str(human)
dim(human)
head(human)
data.frame(human)
write.csv(human, file = "human.csv", row.names = TRUE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
data.frame(human)
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
#16.2.2017//Maija Absetz
#Data Wrangling for the dimensionality
#This data is originally from United Nations Development Programme(http://hdr.undp.org/en/content/human-development-index-hdi)
#Setting the working directory to my computer:
library(Matrix)
library(ggplot2)
library(dplyr)
setwd("C:/Users/Petri/Documents/GitHub/IODS-project/data/")
getwd()
#Read files Human development and gender inequality to R
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
#We have 2 datasets that we eventually want to combine, but let's first see what we have.
#Human development focuses what are the factors that determine how well our country ranks when looking at human development. It has 8 variables and 195 observations. Variables are both numeric and character.
#Gender inequality tries to grasp the inequality between men and women in achievements. It focuses on health, empowerement and work markets. This dataset contains 10 variables and also 195 observations( since it's based on the same resaerch??). This dataset has also both numeric and character variables.
summary(hd)
summary(gii)
#Let's give our variables shorter names, so they will be easier to use further.
colnames(hd)
colnames(hd)[1] <-"Rank"
colnames(hd)[3] <-"HDI"
colnames(hd)[4] <- "Life_expect"
colnames(hd)[5] <- "Edu_expect"
colnames(hd)[6] <- "Edu_years"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI-Rank"
colnames(hd)
colnames(gii)
colnames(gii)[1] <- "Rank"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "Mom_death"
colnames(gii)[5] <- "Young_birth"
colnames(gii)[6] <- "Present_parl"
colnames(gii)[7] <- "Edu2F"
colnames(gii)[8] <- "Edu2M"
colnames(gii)[9] <- "LabF"
colnames(gii)[10] <- "LabM"
colnames(gii)
#Mutate: gii
#2 new variables
gii <- mutate(gii, Sex_edu2 = Edu2F / Edu2M)
gii <- mutate(gii, Lab_ratio = LabF/LabM)
colnames(gii)
#Join datasets by country
join_by <- c("Country")
hdi_gii <- inner_join(hd, gii, by= join_by, suffix= c(".hd", ".gii"))
colnames(hdi_gii)
#Saving project to data file
write.csv(hdi_gii, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
#And final check that everything works.
str(human)
#This is continuum for last week's data wrangling. We are continuing with the same data.
#1. mutate data GNi to numeric
human <- mutate(human, GNI = as.numeric(human$GNI))
str(human)
#2. Keep columns: (described in the meta file above):  "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
keep_columns <- c("Country", "Sex_edu2", "Lab_ratio", "Edu_expect", "Life_expect", "GNI", "Mom_death", "Young_birth", "Present_parl")
human <- select(human, one_of(keep_columns))
str(human)
#3.Remove rows with missing values
#create column with missing values and then filter leaving NA's out.
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human <- filter(human, complete.cases(human))
complete.cases(human)
str(human)
#Let's clean the column country and filter regions out
#The last 7 rows with column country are infact regions instead of countries.
last <- nrow(human) - 7
last
# I'll choose everything until the last 7 observations, the 155's being Nigeria.
human <- human[1:155, ]
str(human)
#4. add countries as rownames and remove country as column
rownames(human) <- human$Country
#Remove country as column
human <- dplyr::select(human, -Country)
str(human)
head(human)
#Now we have wanted 155 observations and 8 variables, with countries as rownames.
#override the old data:
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
#It now has 9 variables, but that is because of the rownames included.
install.packages("FactoMineR")
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
install.packages("tidyr")
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
str(tea)
str(tea)
??tea
data(tea)
res.mca=MCA(tea,quanti.sup=19,quali.sup=20:36)
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
plot(res.mca,invisible=c("ind","quali.sup","quanti.sup"),cex=0.8)
plot(res.mca,invisible=c("quali.sup","quanti.sup"),cex=0.8)
dimdesc(res.mca)
plotellipses(res.mca,keepvar=1:4)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
data(tea)
str(tea)
dim(tea)
summary(tea)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
str(tea)
dim(tea)
summary(tea)
?MCA()
??tea
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data(tea)
dim(my_tea)
summary(my_tea)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data.frame(tea)
dim(my_tea)
summary(my_tea)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data.frame(tea)
dim(my_tea)
str(my_tea)
summary(my_tea)
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
(my_tea)
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_count()
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("breakfast", "sex", "price", "reflect.on.health", "spirituality", "friends", "Tea", "friends")
my_tea1 <- select(my_tea, one_of(keep_columns))
gather(my_tea1) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("breakfast", "sex", "price", "healthy", "spirituality", "friends", "Tea", "tearoom")
my_tea1 <- select(my_tea, one_of(keep_columns))
gather(my_tea1) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(my_tea, graph = FALSE)
mca <- MCA(my_tea1, graph = FALSE)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage="quali")
data(tea)
data(tea)
res.mca=MCA(tea,quanti.sup=19,quali.sup=20:36)
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
plot(res.mca,invisible=c("ind","quali.sup","quanti.sup"),cex=0.8)
plot(res.mca,invisible=c("quali.sup","quanti.sup"),cex=0.8)
dimdesc(res.mca)
plotellipses(res.mca,keepvar=1:4)
?MCA()
plot(mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
res.mca=MCA(my_tea1,quanti.sup=19,quali.sup=20:36)
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
plot(res.mca,invisible=c("ind","quali.sup","quanti.sup"),cex=0.8)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data.frame(tea)
dim(my_tea)
str(my_tea)
summary(my_tea)
dimdesc(res.mca)
plotellipses(res.mca,keepvar=1:4)
plotellipses(my_tea1,keepvar=1:4)
res.mca=MCA(tea,quali.sup=20:36)
res.mca=MCA(my_tea1,quanti.sup=19,quali.sup=20:36)
res.mca=MCA(my_tea1)
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
res.mca=MCA(my_tea1)
plotellipses(res.mca,keepvar=1:4)
#16.2.2017//Maija Absetz
#Data Wrangling for the dimensionality
#This data is originally from United Nations Development Programme(http://hdr.undp.org/en/content/human-development-index-hdi)
#Setting the working directory to my computer:
library(Matrix)
library(ggplot2)
library(dplyr)
setwd("C:/Users/Petri/Documents/GitHub/IODS-project/data/")
getwd()
#Read files Human development and gender inequality to R
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
#We have 2 datasets that we eventually want to combine, but let's first see what we have.
#Human development focuses what are the factors that determine how well our country ranks when looking at human development. It has 8 variables and 195 observations. Variables are both numeric and character.
#Gender inequality tries to grasp the inequality between men and women in achievements. It focuses on health, empowerement and work markets. This dataset contains 10 variables and also 195 observations( since it's based on the same resaerch??). This dataset has also both numeric and character variables.
summary(hd)
summary(gii)
#Let's give our variables shorter names, so they will be easier to use further.
colnames(hd)
colnames(hd)[1] <-"Rank"
colnames(hd)[3] <-"HDI"
colnames(hd)[4] <- "Life_expect"
colnames(hd)[5] <- "Edu_expect"
colnames(hd)[6] <- "Edu_years"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI-Rank"
colnames(hd)
colnames(gii)
colnames(gii)[1] <- "Rank"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "Mom_death"
colnames(gii)[5] <- "Young_birth"
colnames(gii)[6] <- "Present_parl"
colnames(gii)[7] <- "Edu2F"
colnames(gii)[8] <- "Edu2M"
colnames(gii)[9] <- "LabF"
colnames(gii)[10] <- "LabM"
colnames(gii)
#Mutate: gii
#2 new variables
gii <- mutate(gii, Sex_edu2 = Edu2F / Edu2M)
gii <- mutate(gii, Lab_ratio = LabF/LabM)
colnames(gii)
#Join datasets by country
join_by <- c("Country")
hdi_gii <- inner_join(hd, gii, by= join_by, suffix= c(".hd", ".gii"))
colnames(hdi_gii)
#Saving project to data file
write.csv(hdi_gii, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
#And final check that everything works.
str(human)
#This is continuum for last week's data wrangling. We are continuing with the same data.
#1. mutate data GNi to numeric
human <- mutate(human, GNI = as.numeric(human$GNI))
str(human)
#2. Keep columns: (described in the meta file above):  "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
keep_columns <- c("Country", "Sex_edu2", "Lab_ratio", "Edu_expect", "Life_expect", "GNI", "Mom_death", "Young_birth", "Present_parl")
human <- select(human, one_of(keep_columns))
str(human)
#3.Remove rows with missing values
#create column with missing values and then filter leaving NA's out.
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human <- filter(human, complete.cases(human))
complete.cases(human)
str(human)
#Let's clean the column country and filter regions out
#The last 7 rows with column country are infact regions instead of countries.
last <- nrow(human) - 7
last
# I'll choose everything until the last 7 observations, the 155's being Nigeria.
human <- human[1:155, ]
str(human)
#4. add countries as rownames and remove country as column
rownames(human) <- human$Country
#Remove country as column
human <- dplyr::select(human, -Country)
str(human)
head(human)
#Now we have wanted 155 observations and 8 variables, with countries as rownames.
#override the old data:
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
head(human)
write.csv(human, file = "human.csv", row.names = TRUE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
head(human)
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
#16.2.2017//Maija Absetz
#Data Wrangling for the dimensionality
#This data is originally from United Nations Development Programme(http://hdr.undp.org/en/content/human-development-index-hdi)
#Setting the working directory to my computer:
library(Matrix)
library(ggplot2)
library(dplyr)
setwd("C:/Users/Petri/Documents/GitHub/IODS-project/data/")
getwd()
#Read files Human development and gender inequality to R
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
#We have 2 datasets that we eventually want to combine, but let's first see what we have.
#Human development focuses what are the factors that determine how well our country ranks when looking at human development. It has 8 variables and 195 observations. Variables are both numeric and character.
#Gender inequality tries to grasp the inequality between men and women in achievements. It focuses on health, empowerement and work markets. This dataset contains 10 variables and also 195 observations( since it's based on the same resaerch??). This dataset has also both numeric and character variables.
summary(hd)
summary(gii)
#Let's give our variables shorter names, so they will be easier to use further.
colnames(hd)
colnames(hd)[1] <-"Rank"
colnames(hd)[3] <-"HDI"
colnames(hd)[4] <- "Life_expect"
colnames(hd)[5] <- "Edu_expect"
colnames(hd)[6] <- "Edu_years"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI-Rank"
colnames(hd)
colnames(gii)
colnames(gii)[1] <- "Rank"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "Mom_death"
colnames(gii)[5] <- "Young_birth"
colnames(gii)[6] <- "Present_parl"
colnames(gii)[7] <- "Edu2F"
colnames(gii)[8] <- "Edu2M"
colnames(gii)[9] <- "LabF"
colnames(gii)[10] <- "LabM"
colnames(gii)
#Mutate: gii
#2 new variables
gii <- mutate(gii, Sex_edu2 = Edu2F / Edu2M)
gii <- mutate(gii, Lab_ratio = LabF/LabM)
colnames(gii)
#Join datasets by country
join_by <- c("Country")
hdi_gii <- inner_join(hd, gii, by= join_by, suffix= c(".hd", ".gii"))
colnames(hdi_gii)
#Saving project to data file
write.csv(hdi_gii, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
#And final check that everything works.
str(human)
#This is continuum for last week's data wrangling. We are continuing with the same data.
#1. mutate data GNi to numeric
human <- mutate(human, GNI = as.numeric(human$GNI))
str(human)
#2. Keep columns: (described in the meta file above):  "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
keep_columns <- c("Country", "Sex_edu2", "Lab_ratio", "Edu_expect", "Life_expect", "GNI", "Mom_death", "Young_birth", "Present_parl")
human <- select(human, one_of(keep_columns))
str(human)
#3.Remove rows with missing values
#create column with missing values and then filter leaving NA's out.
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human <- filter(human, complete.cases(human))
complete.cases(human)
str(human)
#Let's clean the column country and filter regions out
#The last 7 rows with column country are infact regions instead of countries.
last <- nrow(human) - 7
last
# I'll choose everything until the last 7 observations, the 155's being Nigeria.
human <- human[1:155, ]
str(human)
#4. add countries as rownames and remove country as column
rownames(human) <- human$Country
#Remove country as column
human <- dplyr::select(human, -Country)
str(human)
head(human)
#Now we have wanted 155 observations and 8 variables, with countries as rownames.
#override the old data:
write.csv(human, file = "human.csv", row.names = FALSE)
human <- read.csv("human.csv", sep=",", header= T)
str(human)
summary(human)
complete.cases(human)
head(human)
rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
s <- summary(pca_human)
pca_pr <- round(100*s$importance[2, ], digits = 1)
# print out the percentages of variance
pca_pr
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
s <- summary(pca_human2)
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw a biplot
biplot(pca_human2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
res.pca = PCA(pca_human2, ncp=5, graph=T)
#Draw a pca with only arrows
res.pca = PCA(human, scale.unit= TRUE, ncp=5, graph=T)
pca_human <- prcomp(human)
pca_human
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col= c("grey40", "deeppink2"))
human.std <- scale(human)
pca_human2 <- prcomp(human.std)
biplot(pca_human2, choices= 1:2, cex = c(0.8, 1), col= c("grey40", "deeppink2"))
s <- summary(pca_human2)
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw a biplot
biplot(pca_human2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
#Draw a pca with only arrows
res.pca = PCA(human, scale.unit= TRUE, ncp=5, graph=T)
?PCA()
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data.frame(tea)
dim(my_tea)
str(my_tea)
summary(my_tea)
gather(my_tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(my_tea1, graph = FALSE)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage="quali")
keep_columns <- c("breakfast", "sex", "price", "healthy", "spirituality", "friends", "Tea", "tearoom")
my_tea1 <- select(my_tea, one_of(keep_columns))
gather(my_tea1) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
res.mca=MCA(my_tea1)
plotellipses(res.mca,keepvar=1:4)
#Draw a pca with only arrows
library(FactoMineR)
res.pca = PCA(human, scale.unit= TRUE, ncp=5, graph=T)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
my_tea <- data(tea)
dim(my_tea)
str(my_tea)
summary(my_tea)
library(ggplot2);library(dplyr);library(tidyr);library(FactoMineR)
data(tea)
my_tea <- data.frame(tea)
dim(my_tea)
str(my_tea)
summary(my_tea)
ggplot(my_tea, aes(value)) %>%  + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
my_tea %>% ggplot(aes(value))  + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
data.frame(my_tea) %>% ggplot(aes(value))  + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(my_tea) %>% ggplot(aes(value))  + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
?gather()
